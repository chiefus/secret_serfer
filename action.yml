name: 'Secret Serfer'
author: Andrey Shelkov
description: 'Looking for Secrets in current commit. It can create a report in JUnit Format.'
icon: aperture
color: red
inputs:
  args:
    description: |
      usage: trufflehog3 [options]

      Find secrets in your codebase.

      Allowed optional arguments:
        -v, --verbose      enable verbose logging {-v, -vv, -vvv}
        -o, --output       write report to file
        --no-entropy       disable entropy checks

    required: false
    
  targets:
    description: |
      Paths to git repository files 
      which should be scanned by trufflehog3
    required: true

  exclude_rules:
    description: |
      List of rules which shouldn't be used during scan.
      Be careful with it.
    required: false    

  report:
    description: |
      Name of JUnit test results file
    required: false
  
  suppress_output:
    description: |
      If you desire to conseal results of trufflehog3 work you can suppress.
      This parameter doesn't work if report value was declared. 
    required: false
    default: false

  skipped_paths:
    description: |
      Set list of paths' regex values, devided by space.
      You can put it in quotation like this:
        skipped_paths: "'static/images' 'static/css'"
    required: false

  skipped_strings:
    description: |
      Trufflehog3 uses regexp based rules. Sometimes they aren't perfect.
      To get rid it you can declare list of stings which should be excluded from checks.
      For example, some URIs can contain part which matches regexp of AWS Secret Token.
      You can exclude this URI from analysis.
    required: false

runs:
  using: "docker"
  image: 'Dockerfile'
  args:
  - ${{ inputs.args }}

  env:
    TARGETS: ${{ inputs.targets }}
    REPORT: ${{ inputs.report }}
    EXCLUDE_RULES: ${{ inputs.exclude_rules }}
    SUPPRESS_OUTPUT: ${{ inputs.suppress_output }}
    SKIPPED_PATHS: ${{ inputs.skipped_paths }}
    SKIPPED_STRINGS: ${{ inputs.skipped_strings }}